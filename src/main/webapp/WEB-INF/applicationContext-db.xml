<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

    <tx:annotation-driven transaction-manager="transactionManager"/>
    <!--<tx:annotation-driven />-->
    <!--<tx:jta-transaction-manager />-->

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor">
        <property name="defaultPersistenceUnitName" value="mysqlUnit"/>
    </bean>

    <jpa:repositories base-package="com.springapp.mvc" entity-manager-factory-ref="entityManagerFactory1"/>

    <bean id="entityManagerFactory1"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="mysqlUnit" />
        <property name="dataSource" ref="dataSource1" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" />
                <property name="databasePlatform"
                          value="org.hibernate.dialect.MySQL5InnoDBDialect" />
            </bean>
        </property>
    </bean>
<!--

    <bean id="entityManagerFactory2"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="oracleUnit" />
        <property name="dataSource" ref="dataSource2" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" />
                <property name="databasePlatform"
                          value="org.hibernate.dialect.Oracle10gDialect" />
            </bean>
        </property>
    </bean>
-->

    <bean id="dataSource1" class="com.atomikos.jdbc.AtomikosDataSourceBean"
          init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="DataSource1" />
        <property name="xaDataSource" ref="dataBase1" />
        <property name="poolSize" value="3" />
    </bean>

    <bean id="dataBase1" class="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource"
          lazy-init="true">
        <property name="pinGlobalTxToPhysicalConnection" value="true" />
        <property name="user" value="root" />
        <property name="password" value="test" />
        <property name="url" value="jdbc:mysql://localhost/test" />
    </bean>
<!--

    <bean id="dataSource2" class="com.atomikos.jdbc.AtomikosDataSourceBean"
          init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="DataSource2" />
        <property name="xaDataSource" ref="dataBase2" />
        <property name="poolSize" value="3" />
    </bean>

    <bean id="dataBase2" class="oracle.jdbc.xa.client.OracleXADataSource"
          lazy-init="true">
        <property name="user" value="test" />
        <property name="password" value="1234" />
        <property name="URL" value="jdbc:oracle:thin:@192.168.44.128:1521:XE" />
    </bean>
-->

    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
          init-method="init" destroy-method="close">
        <property name="forceShutdown" value="false" />
    </bean>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.J2eeUserTransaction">
        <property name="transactionTimeout" value="300" />
    </bean>

    <bean id="transactionManager"
          class="org.springframework.transaction.jta.JtaTransactionManager"
          depends-on="atomikosTransactionManager,atomikosUserTransaction">
        <property name="transactionManager" ref="atomikosTransactionManager" />
        <property name="userTransaction" ref="atomikosUserTransaction" />
        <property name="allowCustomIsolationLevels" value="true" />
    </bean>

</beans>